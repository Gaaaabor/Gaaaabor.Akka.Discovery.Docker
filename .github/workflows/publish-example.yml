name: Gaaaabor.Akka.Discovery.Docker.DockerExample

on:  
  workflow_dispatch:
    branches:
      - feature/docker_swarm_support

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:  
  IMAGE_NAME: gaaaabor.akka.discovery.docker.dockerexample
  IMAGE_NAME_ARM: gaaaabor.akka.discovery.docker.dockerexample.arm

jobs:
  bap:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file ./examples/DockerExample/Dockerfile --tag $IMAGE_NAME

      - name: Build arm image
        run: docker build . --file ./examples/DockerExample/Dockerfile --tag $IMAGE_NAME_ARM --build-arg BASE_IMAGE=mcr.microsoft.com/dotnet/aspnet:8.0-jammy-arm64v8 --build-arg BUILD_IMAGE=mcr.microsoft.com/dotnet/sdk:8.0-jammy

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Push arm image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME_ARM
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME_ARM $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION